# Questions to be handed in for project 6:


To get started, we load `Plots` so that we can make plots and the `Roots` package for later usage.

```
using Plots
gadfly()
using Roots
```


----


### Quick background

Read about this material here: [Approximate derivatives in julia](http://mth229.github.io/derivatives.html).

For the impatient, the slope of the tangent line to the graph of
$f(x)$ at the point $(c,f(c))$ is given by the following limit:

$$~
\lim_{h \rightarrow 0} \frac{f(c + h) - f(c)}{h}.
~$$

The notation for this -- when the limit exists -- is $f'(c)$, the
intuition is that this is the limit of the slope of a sequence of
secant lines connecting the points $(c, f(c))$ and $(c+h, f(c+h))$. In
general the derivative of a function $f(x)$ is the function $f'(x)$,
which returns the slope of the tangent line for each $x$ where it is
defined.

#### Approximate derivatives

Approximating the slope of the tangent line can be done
[several ways](XXX). The *forward difference quotient* takes a small value of $h$ and
uses the values $(f(x+h) - f(x))/h$ as an approximation.


For example to estimate the derivative of $x^x$ at $c=1$ with `h=1e-6` we could have

```
f(x) = x^x
c, h = 1, 1e-6
(f(c+h) - f(c))/h
```



In `julia` we can write a function that does this, allowing us to pass
in any function:

```
forward(f, c; h=1e-6) = (f(c+h) - f(c))/h
```

We can define an *operator* -- something which takes a function and
returns a function modifying the above slightly:

```
Df(f; h=1e-6) = x -> forward(f,x,h=h)
```

#### Automatic derivatives

In the `Roots` package, an operator `D` (using Euler's notation) is
given which uses a numeric approach to compute the derivative. This is
more accurate, but conceptually a bit more difficult to understand and
does not work for all functions. It is also used like an operator,
e.g., `D(f)` is a function derived from the function `f`:

```
using Roots
fp(x) = D(sin)(x)		# define a function fp or use D(sin) directly
fp(pi)			        # finds cos(pi). Also D(sin)(pi)
```

The usual notation for a deriviative can be defined, though it isn't
the default. If we use this command (ignoring the warning):

```
Base.ctranspose(f::Function) = D(f)
```

then, we can differentiate using the "usual" notation:

```
f(x) = sin(x)
f'(pi)     # same as D(f)(pi)
f''(pi)    # same as D(f,2)(pi)
```



#### Symbolic derivatives

The `D` function gives accurate numeric values for first, second, and
even higher-order derivatives. It does not however, return the
expression one would get were these computed by hand. The `diff` function from `SymPy` will
find symbolic derivatives, similar to what is achieved when differentiating "by hand."

The `diff` function can be called with a function:

```
using SymPy
f(x) = exp(x) * sin(x)
diff(f)
```

It can also be called with a symbolic expression:

```noout
x, a = symbols("x, a")
```

```verbatim
@vars x a
```

```
diff(x * sin(x))
```

If there is another symbol, then a second argument is passed to specify which one is being having its derivative taken:

```
diff(x*sin(a*x), x)
```



### Questions

* Calculate the slope of the secant line of $f(x) = 3x^2 + 5$ between
  $({{p1_x0}},f({{p1_x0}}))$ and $({{p1_x1}}, f({{p1_x1}}))$.

```
```

```
f(x) = 3x^2 + 5
x0,x1 = {{p1_x0}}, {{p1_x1}}
val = (f(x1) - f(x0))/(x1 - x0)
numericq(val, 1e-3, "slope of secant line")
```

* Verify that the derivative of $f(x) = \sin(x)$ at $\pi/3$ is $1/2$
  by finding the following limit using a table:

$$~
\lim_{h \rightarrow 0} \frac{f(\pi/3 + h) - f(\pi/3)}{h}
~$$

(Use `[hs ys]` to look at your generated data, as was done in the limits project.)

```
```

```
longq("Verify derivative using a table", "\\verb+[hs map(h->(sin(pi/3 + h)-sin(pi/3))/h, hs)]+")
```


* Let $f(x) = 1/x$ and $c={{p2_c}}$. Find the approximate derivative (forward) when
  `h=1e-6`.

```
```

```
f(x) = 1/x
c, h = {{p2_c}}, 1e-6
val = (f(c + h) - f(c))/h
numericq(val, 1e-4, "approx forward derivative \\verb+(1/x)'({{p2_c}})+")
```


* Let $f(x) = x^x$ and $c={{p3_c}}$. Find the approximate derivative
  (forward) when `h=1e-8`.

```
```


```
f(x) = x^x
p3_c, h = 3, 1e-8
val = (f(c + h) - f(c))/h
numericq(val, 1e-6, "approx forward derivative \\verb+(x^x)'($c)+")
```



* Let $f(x) = (x + 2)/(1 + x^3)$. Plot both $f$ and its approximate
  derivative on the interval $[0,5]$. Identify the zero of the
  derivative. What is its value? What is the value of $f(x)$ at this
  point?


What commands produce the plot?

```
```

```
longq("what commands produce a plot of f=(x+2)/(1+x^3) and its derivative over [0,5]?")
```

What is the zero of the derivative on this interval?

```
```

```
using Roots
f(x) = (x+2)/ (1 + x^3)
val = fzero(D(f), [0,5])
numericq(val, 2e-1, "zero of derivative")
```

What is the value of $f$ at this point:

```
```

```
numericq(f(val), 2e-1, "value of f(x0)")
```

* Let $f(x) = (x^3 + 5)(x^3 + x + 1)$. The derivative of this function
  has one real zero. Find it. (You can use `fzero` with the derivative
  function after plotting to identify a bracketing interval.)

```
```

```
f(x) = (x^3 + 5)*(x^3 + x + 1)
val = fzero(D(f), -10, 10)
numericq(val, 1e-4, "zero of f'(x)")
```


* Let $f(x) = \sin(x)$. Following the example on p124 of the Rogawski
  book we look at a table of values of the forward difference equation
  at $x=\pi/6$ for various values of $h$. The true derivative is
  $\cos(\pi/6) = \sqrt{3}/2$.

Make the following table. 

```
f(x) = sin(x)
c = pi/6
hs = [(1/10)^i for i in 1:12]
ys = [forward(f, c, h=h) for h in hs] - sqrt(3)/2
[hs ys]
```

What size `h` has the closest approximation?

```
choices = ["1e-"*string(i) for i in 1:12]
ans = 8
radioq(choices, ans, "smallest error", keep_order=true)
```

* The `D` operator is easy to use. Here is how we can plot both the
  sine function and its derivative

```
using Plots, Roots			# to load plot and D
f(x) = sin(x)
plot([f, D(f)], 0, 2pi)     # or plot(f, 0, 2pi); plot!(D(f), 0, 2pi)
```

(If you defined the `'` notation to work, then it is even easier: `plot([f,f'], 0, 2pi)`.)


Make a plot of $f(x) = \log(x+1) - x + x^2/2$ and its derivative over
the interval $[-3/4, 4]$. The commands are:


```
```

```
longq("Commands to plot f and its derivative", "\\verb+plot([f,D(f)], -3/4, 4)+")
```

Is the derivative always increasing?

```
```

```
booleanq(false, "is derivative always increasing?")
```

* The function $f(x) = x^x$ has a derivative for $x > 0$. Use `fzero`
  to find a zero of its derivative. What is the value of the zero?

```
```

```
f(x) = x^x
val = fzero(D(f), [1/4, 4])
numericq(val, 1e-4, "zero of derivative of \\( x^x \\)")
```

* Using the `diff` function from the `SymPy` package, identify the proper derivative of $x^x$:

```
```

```
choices = [L"x^x*(log(x) + 1)", L"x*x^(x-1)", L"x^x", L"x^(x+1) / (x+1)"]
ans = 1
radioq(choices, ans)
```

* Using the `diff` function, find the derivative of the inverse tangent, $\tan^{-1}(x)$ (`atan`). What is the function?

```
```

```
choices = [L"1/(1+x^2)", L"(-1)\tan^{-2}(x)", L"(-1)\tan^{-2}(x) \cdot (\tan^2(x) + 1)"]
ans = 1
radioq(choices, ans)
```



## Some applications



* Suppose the height of a ball falls according to the formula $h(t) =
  300 - 16t^2$. Find the rate of change of height at the instant the
  ball hits the ground.

```
```

```
h1(t) = 300 - 16t^2
t0 = fzero(h1, 0, 10)
val = D(h1)(t0)
numericq(val, 1e-4, "value of derivative when h is 0")
```



* A formula for blood alcohol level in the body based on time is based
  on the number of drinks and the time
  [wikipedia](http://en.wikipedia.org/wiki/Blood_alcohol_content).

Suppose a model for the number of drinks consumed per hour is 

```
n(t) = t <= 3 ? 2 * sqrt(3) * sqrt(t) : 6.0
```

Then the BAL for a 175 pound male is given by

```
bal(t) = (0.806 * 1.2 * n(t)) / (0.58 * 175 / 2.2) - 0.017*t
```

From the plot below, describe when the peak blood alcohol level occurs
and is the person ever in danger of being above 0.10?

```
plot(bal, .5,7)
```

```
```

```
longq("Describe when peak BAL occurs, is it ever above 0.10?", "No, it isn't")
```


* Plot the derivative of `bal` over the time $[0.5, 7]$.  Is this function ever positive?

```
```

```
choices = ["Yes, initially", "Yes, after 3", "No, it never is"]
ans = 1
radioq(choices, ans, "Is bal' ever positive")
```


### Tangent lines


The tangent line to the graph of $f(x)$ at $x=c$ is given by $y = f(c)
+ f'(c)(x-c)$. It is fairly easy to plot both the function and its
tangent line -- we just need a function to compute the tangent
line.


Here we write an operator to return such a function.  The operator
needs to know both the function name and the value $c$ to find the
tangent line at $(c, f(c))$ (notice the `x->` bit indicating the
following returns a  function):


```
tangent(f, c) = x -> f(c) + f'(c)*(x-c) # returns a function
```

Here we see how to use it:

```
f(x) = x^2			# replace me
plot([f, tangent(f, 1)], 0, 2)   # or plot(f, 0, 2); plot!(tangent(f, 1), 0, 2)
```


* For the function $f(x) = 1/(x^2 + 1)$ (The witch of Agnesi), graph
  $f$ over the interval $[-3,3]$ and the tangent line to $f$ at $x=1$.

```
```

```
longq("Commands to plot witch of Agnesi over [-3,3] with tangent line at x=1")
```


* Let $f(x) = x^3 -2x - 5$. Find the intersection of the tangent line
  at $x=3$ with the $x$-axis.

```
```

```
f(x) = x^3 - 2x - 5
m = D(f)(3)
tl(x) = f(3) + m * (x-3)
val = fzero(tl, -100, 100)
numericq(val, 1e-4, "intersection of tangent line with x axis", "x-f(x)/f'(x)")
```


* Let $f(x)$ be given by the expression below. 

```
f(x; a=1) = a * log((a + sqrt(a^2 - x^2))/x ) - sqrt(a^2 - x^2)
```

The value of `a` is a parameter, the default value of $a=1$ is fine.

For $x=0.25$ and $x=0.75$ the tangent lines can be drawn with

```
plot([f, tangent(f, 0.25), tangent(f, 0.75)], 0.01, 0.8)
```

Verify that the length of the tangent line between $(c, f(c))$ and the
$y$ axis is the same for $c=0.25$ and $c=0.75$. (For any $c$, the
distance formula can be used to find the distance between the point
$(c, f(c))$ and $(0, y_0)$ where, $y_0$ is where the tangent line at
$c$ crosses the $y$ axis.)

```
```


```
longq("Verify lengths of two lines are same", 
"Write a function to compute length squared: \\verb#c^2 + (f(c)-(f(c)+D(f)(c)*(0-c)))^2#")
```

#### Higher-order derivatives


Higher-order derivates can be approximated as well. For example, one
can use `D(f,2)` *or*, if defined, `f''` to approximate the second
derivative.

* Find the second derivative of $f(x) = \sqrt{x \cdot exp(x)}$ at $c={{p4_c}}$.

```
```

```
f(x) = sqrt(x * exp(x))
c = {{p4_c}}
val = f''(c)
numericq(val)
```

* Find the zeros in $[0, 10]$ of the second derivative of the function $f(x) = \sin(2x) + 3\sin(4x)$ using `fzeros`.

```
```

```
f(x) = sin(2x) + 3sin(4x)
vals = fzeros(f, 0, 10)
choices = [
"13 numbers: 0.0, 0.869122, ..., 8.55566, 9.42478",
"13 numbers: 0.420534, 1.20943, ..., 9.00424, 9.84531",
"13 numbers: 0.0, 0.806238, ..., 8.61854, 9.42478"
]
ans = 3
radioq(choices, ans)
```
